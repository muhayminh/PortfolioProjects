1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table =10000
iv. Checkin table =10000
v. elite_years table =10000
vi. friend table = 10000
vii. hours table =10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table =10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000(id)
ii. Hours = 1562(business_id) 
iii. Category = 2643(business_id)
iv. Attribute = 1115(business_id)
v. Review =  10000(id) 
vi. Checkin = 493(business_id)
vii. Photo =  10000(id) 
viii. Tip = 537(id)  3979(business_id)
ix. User = 10000(id)
x. Friend = 11(user_id)
xi. Elite_years = 2780(user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer:NO
	
	
	SQL code used to arrive at answer:select id, name, review_count, yelping_since, useful, funny, cool, fans, average_stars, 
			   compliment_hot, compliment_more, compliment_profile, compliment_cute, compliment_list, 
			   compliment_note, compliment_plain, compliment_cool, compliment_funny, compliment_writer, compliment_photos
		from  user
		where 	id is null
				or name is null
				or review_count is null
				or yelping_since is null
				or useful is null
				or funny is null
				or cool is null
				or fans is null
				or average_stars is null
				or compliment_hot is null
				or compliment_more is null
				or compliment_profile is null
				or compliment_cute is null
				or compliment_list is null
				or compliment_note is null
				or compliment_plain is null
				or compliment_cool is null
				or compliment_funny is null
				or compliment_writer is null
				or compliment_photos is null
	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1.0		max:5		avg:3.6549 
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414 
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000	avg:24.2995 
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:select city
,sum(review_count) as reviews
from business
group by city
order by sum(review_count) 

	
	
	Copy and Paste the Result Below:
+------------------+---------+
| city             | reviews |
+------------------+---------+
| Blainville       |       3 |
| Bolton           |       3 |
| Braddock         |       3 |
| Brooklin         |       3 |
| Brooklyn Heights |       3 |
| Dallas           |       3 |
| East Gwillimbury |       3 |
| Firth of Forth   |       3 |
| Fort McDowell    |       3 |
| Glenshaw         |       3 |
| Gormley          |       3 |
| Haddington       |       3 |
| Ingliston        |       3 |
| Kahnawake        |       3 |
| Kennedy Township |       3 |
| King             |       3 |
| Kirtland         |       3 |
| L'ile-Bizard     |       3 |
| McFarland        |       3 |
| Middleburg Hts   |       3 |
| Monticello       |       3 |
| Möglingen        |       3 |
| Nellis AFB       |       3 |
| Neuhausen        |       3 |
| North Randall    |       3 |
+------------------+---------+



	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select stars as star_rating
,city
,count(stars) as count
from business 
where city = 'Avon'
group by star_rating


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+------+-------+
| star_rating | city | count |
+-------------+------+-------+
|         1.5 | Avon |     1 |
|         2.5 | Avon |     2 |
|         3.5 | Avon |     3 |
|         4.0 | Avon |     2 |
|         4.5 | Avon |     1 |
|         5.0 | Avon |     1 |
+-------------+------+-------+


ii. Beachwood

SQL code used to arrive at answer:
select stars as star_rating
,city
,count(stars) as count
from business 
where city = 'Beachwood'
group by star_rating



Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
+-------------+-----------+-------+
| star_rating | city      | count |
+-------------+-----------+-------+
|         2.0 | Beachwood |     1 |
|         2.5 | Beachwood |     1 |
|         3.0 | Beachwood |     2 |
|         3.5 | Beachwood |     2 |
|         4.0 | Beachwood |     1 |
|         4.5 | Beachwood |     2 |
|         5.0 | Beachwood |     5 |
+-------------+-----------+-------+
		


7. Find the top 3 users based on their total number of reviews: Gerald, Sara, Yuri
		
	SQL code used to arrive at answer:
select name
,max(review_count) as review_count
from user
group by name
order by review_count desc
	
		
	Copy and Paste the Result Below:
+-----------+--------------+
| name      | review_count |
+-----------+--------------+
| Gerald    |         2000 |
| Sara      |         1629 |
| Yuri      |         1339 |
| .Hon      |         1246 |
| William   |         1215 |
| Harald    |         1153 |
| eric      |         1116 |
| Roanna    |         1039 |
| Mimi      |          968 |
| Christine |          930 |
| Ed        |          904 |
| Nicole    |          864 |
| Fran      |          862 |
| Mark      |          861 |
| Christina |          842 |
| Dominic   |          836 |
| Lissa     |          834 |
| Lisa      |          813 |
| Alison    |          775 |
| Sui       |          754 |
| Tim       |          702 |
| L         |          696 |
| Angela    |          694 |
| Crissy    |          676 |
| Lyn       |          675 |
+-----------+--------------+

		


8. Does posing more reviews correlate with more fans? NO

	Please explain your findings and interpretation of the results: 
Posing more fans does not correlate with more fans. For example Gerald has the highest view_count and has less fans than Mimi who has a lower view_count but more fans.
+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+
	

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Love

	
	SQL code used to arrive at answer:
select (select count(text) 
from review
where text like '%love%') as love_count

select (select count(text) 
from review
where text like '%hate%') as hate_count

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
select name
,fans
from user 
order by fans desc 
limit 10
	
	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+


	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

select business.name
,business.city
,business.stars
,hours.hours
,category.category
,business.review_count
from (business inner join category 
on business.id = category.business_id) 
inner join hours on hours.business_id = category.business_id
where business.city = 'Cleveland' 
group by business.stars;


	
i. Do the two groups you chose to analyze have a different distribution of hours? YES



ii. Do the two groups you chose to analyze have a different number of reviews? YES


         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain. NO


SQL code used for analysis: select business.
name
,business.city
,business.stars
,hours.hours
,category.category
,business.review_count
from (business inner join category 
on business.id = category.business_id) 
inner join hours on hours.business_id = category.business_id
where business.city = 'Cleveland' 
group by business.stars;



		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: The businesses that are closed have a higher review_count than the ones that open

         
         
ii. Difference 2: The businesses that are open have a higher rating than the ones that are closed
         
         
         
SQL code used for analysis:select business.
select business.name
,business.city
,business.stars
,hours.hours
,category.category
,business.is_open
,business.review_count
from (business inner join category 
on business.id = category.business_id) 
inner join hours on hours.business_id = category.business_id
where business.city = 'Cleveland' 
group by business.is_open;



	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
If getting a compliment_cute correlates to a hgiher star rating.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
The type of data I will need for my analysis is, two sources of tables.  I will need one table to see the star rating a business has and another table to see if a business left a compliment "cute".  Then I will need to combine these two tables into one to be able to see "compliment_cute and the view rating in one table.  Based on that table I will be able to determine if getting a "compliment_cute" correlates to having a higher rating.
                           
                  
iii. Output of your finished dataset:
         
         
iv. Provide the SQL code you used to create your final dataset:
select business.name
,business.city
,business.stars
,user.compliment_cute 
from (business
inner join user
on business.id = user.id)
order by stars


-- Here is the entire final peer review for Coursera to earn my certificate in Data Science and the codes provided for each answer.
